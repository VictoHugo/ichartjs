iChart.Sector=iChart.extend(iChart.Component,{configure:function(){iChart.Sector.superclass.configure.apply(this,arguments);this.type="sector";this.set({counterclockwise:!1,startAngle:0,middleAngle:0,endAngle:0,totalAngle:0,pop_event:"click",expand:!1,pop_animate:!1,mutex:!1,increment:void 0,shadow:!0,gradient:!0,label:{enable:!0,linelength:void 0},tip:{enable:!1,border:{width:2}}});this.registerEvent();this.tip=this.label=null},expand:function(){this.expanded=!0},collapse:function(){this.expanded=
!1},toggle:function(){this.expanded=!this.expanded},drawLabel:function(){this.get("label.enable")&&this.label.draw({highlight:this.highlighted,invoke:this.labelInvoke(this.x,this.y)})},doDraw:function(){this.drawSector();this.drawLabel()},doConfig:function(){iChart.Sector.superclass.doConfig.call(this);this.push("totalAngle",this.get("endAngle")-this.get("startAngle"));this.push("label.scolor",this.get("background_color"));this.expanded=this.get("expand");var a=this;this.get("tip.enable")&&("follow"!=
this.get("tip.showType")&&this.push("tip.invokeOffsetDynamic",!1),this.tip=new iChart.Tip(this.get("tip"),this));this.variable.event.poped=!1;this.on(this.get("pop_event"),function(){a.variable.event.poped=true;a.toggle();a.redraw();a.variable.event.poped=false});this.on("beforedraw",function(){this.x=this.get("originx");this.y=this.get("originy");if(this.expanded)if(this.get("mutex")&&!a.variable.event.poped)this.expanded=false;else{this.x=this.x+this.get("increment")*Math.cos(2*Math.PI-this.get("middleAngle"));
this.y=this.y-this.get("increment")*Math.sin(2*Math.PI-this.get("middleAngle"))}return true})}});
